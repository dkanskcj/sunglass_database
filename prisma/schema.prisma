generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id                Int       @id @default(autoincrement())
  thumbnailMain     String
  thumbnailSub      String
  name              String
  cost              Int
  discount          Int
  discountStartDate DateTime?
  discountEndDate   DateTime?
  amount            Int
  optionName        String?
  optionValues      String?
  description       String?
  modelName         String
  brandName         String
  isKC              Boolean
  kcInfo            String
  origin            String
  madeStartDate     DateTime?
  validEndDate      DateTime?
  isTeenager        Boolean
  isShowDetail      Boolean
  courier           String
  refundDeliveryFee Int
  changeDeliveryFee Int
  address           String
  addressDetail     String
  tel               String
  referenceDate     String
  cancelReason      String
  remark            String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @default(now()) @updatedAt
  deletedAt         DateTime?
  optionList        Option[]
}

model Company {
  id            Int         @id @default(autoincrement())
  name          String
  tel           String
  owner         String
  companyNumber String
  address       String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now()) @updatedAt
  deletedAt     DateTime?
  OrderList     Ordertest[]
}

model Option {
  id        Int       @id @default(autoincrement())
  addCost   Int
  amount    Int
  productId Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?
  product   Product?  @relation(fields: [productId], references: [id])
}

model Stocktest {
  id           Int       @id @default(autoincrement())
  company      String
  products     String
  now_stock    Int
  stock        Int
  stock_option String?
  cost         Int
  totalCost    Int
  reason       String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now()) @updatedAt
  deletedAt    DateTime?
}

model Stock {
  id           Int       @id @default(autoincrement())
  company      String
  products     String
  now_stock    Int
  stock        Int
  stock_option String?
  cost         Int
  totalCost    Int
  reason       String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now()) @updatedAt
  deletedAt    DateTime?
}

model Ordertest {
  orderNumber    Int        @id @default(autoincrement())
  orderName      String
  product        String
  stock          String
  companyId      Int?
  notice         String?
  orderStatus    String
  amount         Int
  phoneNumber    Int
  purchaseMethod String
  purchase       Int
  shippingStatus String
  shipping       String
  shipcost       Int
  shipAddress    String
  totalCost      Int?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now()) @updatedAt
  deletedAt      DateTime?
  company        Company?   @relation(fields: [companyId], references: [id])
  shippingList   Shipping[]
}

model Shipping {
  id        Int        @id @default(autoincrement())
  orderId   Int?
  coupon    String?
  status    String?
  ordertest Ordertest? @relation(fields: [orderId], references: [orderNumber])
}
